# Copyright 2020 The OpenEBS Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: build

on:
  - pull_request
  # create:
  # push:
  #   branches:
  #     - 'develop'
  #     - 'v*'
  #   paths-ignore:
  #     - '*.md'
  #     - 'BUILDMETA'
  #     - 'changelogs/**'
  #     - 'deploy/helm/**'
  #     - 'docs/**'
  #     - 'LICENSE'
  #     - 'MAINTAINERS'

jobs:
  lint:
    # to ignore builds on release
    if: ${{ (github.event.ref_type != 'tag') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: '.'
          pattern: '*.sh'
          exclude: './.git/*'

      - name: Set up Go 1.19
        uses: actions/setup-go@v5
        with:
          go-version: 1.19.9
          cache: false

      - name: Lint Check
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.56.2
          args: -E exportloopref,dupl,revive,bodyclose,goconst,misspell -D structcheck --timeout 5m0s

  unit-test:
    # to ignore builds on release
    if: ${{ (github.event.ref_type != 'tag') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go 1.19
        uses: actions/setup-go@v5
        with:
          go-version: 1.19.9
          cache: false

      - name: Unit test
        run: make test

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v4  
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          name: coverage-$(date +%s)
          flags: unittests

  bdd-test:
    needs: ['unit-test']
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        kubernetes: [v1.27.3]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go 1.19
        uses: actions/setup-go@v5
        with:
          go-version: 1.19.9
          cache: false

      - name: Setup Minikube-Kubernetes
        uses: medyagh/setup-minikube@latest
        with:
          cache: false
          minikube-version: 1.31.1
          driver: none
          kubernetes-version: ${{ matrix.kubernetes }}
          cni: calico
          start-args: '--install-addons=false'

      - name: Build images locally
        run: make lvm-driver-image || exit 1;

      - name: bootstrap
        run: make bootstrap

      - name: Running tests
        run: ./ci/ci-test.sh

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v4  
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./tests/bdd_coverage.txt
          name: coverage-bdd_coverage-$(date +%s)
          flags: bddtests

  ansible:
    runs-on: ubuntu-latest
    needs: ['lint', 'unit-test', 'bdd-test']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Image Org
        # sets the default IMAGE_ORG to openebs
        run: |
          [ -z "${{ secrets.IMAGE_ORG }}" ] && IMAGE_ORG=openebs || IMAGE_ORG=${{ secrets.IMAGE_ORG}}
          echo "IMAGE_ORG=${IMAGE_ORG}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push the ansible image
        uses: docker/build-push-action@v5
        with:
          file: ./e2e-tests/Dockerfile
          push: true
          load: false
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE_ORG }}/lvm-localpv-e2e:ci

  csi-driver:
    runs-on: ubuntu-latest
    needs: ['lint', 'unit-test', 'bdd-test']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Image Org
        # sets the default IMAGE_ORG to openebs
        run: |
          [ -z "${{ secrets.IMAGE_ORG }}" ] && IMAGE_ORG=openebs || IMAGE_ORG=${{ secrets.IMAGE_ORG }}
          echo "IMAGE_ORG=${IMAGE_ORG}" >> $GITHUB_ENV

      - name: Set Build Date
        id: date
        run: |
          echo "DATE=$(date -u +'%Y-%m-%dT%H:%M:%S%Z')" >> $GITHUB_OUTPUT

      - name: Set Tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          CI_TAG=${BRANCH#v}-ci
          if [ ${BRANCH} = "develop" ]; then
            CI_TAG="ci"
          fi
          echo "TAG=${CI_TAG}" >> $GITHUB_ENV
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          # add each registry to which the image needs to be pushed here
          images: |
            ${{ env.IMAGE_ORG }}/lvm-driver
            quay.io/${{ env.IMAGE_ORG }}/lvm-driver
            ghcr.io/${{ env.IMAGE_ORG }}/lvm-driver
          tags: |
            type=raw,value=latest,enable=false
            type=raw,value=${{ env.TAG }}

      - name: Print Tag info
        run: |
          echo "BRANCH: ${BRANCH}"
          echo "${{ steps.docker_meta.outputs.tags }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.13.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./buildscripts/lvm-driver/Dockerfile.buildx
          push: true
          platforms: linux/amd64, linux/arm64
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            DBUILD_DATE=${{ steps.date.outputs.DATE }}
            DBUILD_REPO_URL=https://github.com/openebs/lvm-localpv
            DBUILD_SITE_URL=https://openebs.io
            BRANCH=${{ env.BRANCH }}
